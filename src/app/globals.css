:root {
  --background: #ffffff;
  --foreground: #171717;
  --font-monument: 'Monument Grotesk', system-ui, -apple-system, 'Segoe UI', Roboto, Arial;
  /* Design system spacing tokens (site-wide) */
  --space-xs: 8px;
  --space-sm: 16px;
  --space-md: 32px;
  --space-lg: 48px;
  --space-xl: 64px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #000000;
    --foreground: #ffffff;
  }
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: var(--font-monument);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Ensure headings don't inherit bold weight from the font - keep them normal */
h1, h2, h3, h4, h5, h6, .post-title, .post-author {
  font-weight: 400;
  font-weight: normal;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

/* Post page styles moved from inline styles */
.post-page {
  position: relative;
  padding: 2rem;
  min-height: 100vh;
  display: flex;
  align-items: center; /* vertically center the content in the viewport */
  justify-content: center;
  flex-direction: row;
}

.post-transition-img {
  position: fixed;
  top: 50%;
  left: 50%;
  width: auto;
  height: 80vh;
  transform: translate(-50%, -50%) scale(1);
  z-index: 1000;
  display: none;
}

.post-content {
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  /* allow the content container to span the full viewport so internal
     sections (like the full-bleed header and the centered post-body) can
     position independently */
  width: 100%;
  max-width: none;
  margin: 0;
  margin-top: 10rem;
}

.post-content.is-visible {
  opacity: 1;
}

.post-title {
  font-size: 7rem;
  line-height: .9;
}

.post-author {
  font-size: 7rem;
  margin-bottom: 0rem;
  opacity: 0.8;
  line-height: .9;
  color: grey;
}

.post-image {
  width: 100%;
  height: auto;
  margin-bottom: 2rem;
  border-radius: 0;
}

/* make the header image full-bleed across the viewport while inside the centered container */
.post-image-header {
  width: 100vw;
  max-width: 100vw;
  height: auto;
  display: block;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  margin-bottom: 2rem;
  object-fit: cover;
}

/* header row: metadata and header image side-by-side on wide screens */
.post-header {
  width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-bottom: 2rem;
}

.post-meta-row {
  display: flex;
  width: 100%;
  /* stack title and author vertically and center them */
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1rem 2rem;
  box-sizing: border-box;
  text-align: center;
}

/* constrain title/author width and center text when stacked */
.post-meta-row .post-title,
.post-meta-row .post-author {
  max-width: 1000px;
  width: 100%;
  box-sizing: border-box;
  overflow-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
  text-align: center;
}

/* when image is part of header-row, occupy half the row and sit on the left */
.post-header-image {
  /* full-bleed across the viewport */
  width: 100vw;
  max-width: 100vw;
  height: auto;
  max-height: 90vh;
  display: block;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  object-fit: cover;
  object-position: center;
  border-radius: 0;
}

@media (max-width: 768px) {
  .post-header {
    margin-left: 0;
  }
  .post-header-image {
    width: 100%;
    max-width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
  .post-meta-row {
    padding: 1rem;
  flex-direction: column;
  align-items: flex-start;
    gap: 0.5rem;
  }
  .post-meta-row .post-title,
  .post-meta-row .post-author {
    max-width: 100%;
    text-align: left;
  }
}

/* Post body centered single column */
.post-body {
  max-width: 800px;
  /* center relative to the viewport: place left edge at 50% - half width */
  margin-left: calc(50% - 400px);
  margin-right: calc(50% - 400px);
  margin-top: 4rem;
  padding: 0 1rem;
  font-size: 1.25rem;
}

/* Main image figure that follows the same column constraints as .post-body */
.post-main-figure {
  /* full-bleed image area while caption below stays constrained */
  width: 100vw;
  max-width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  margin-top: 2rem;
  padding: 0;
  box-sizing: border-box;
}

.post-main-image {
  /* make the header/main image full-bleed */
  width: 100vw;
  max-width: 100vw;
  height: auto;
  display: block;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  object-fit: cover;
  object-position: center;
  max-height: 90vh;
  border-radius: 0;
}

/* blur-up / LQIP support: use background-image for tiny placeholder and fade/scale the real image in */
.post-main-image.not-loaded {
  /* Keep a static LQIP placeholder but do not animate transform or opacity */
  filter: blur(8px) saturate(0.9);
  transform: none;
  transition: none;
}
.post-main-image.is-loaded {
  filter: none;
  transform: none;
  transition: none;
}

/* Lightbox overlay */
.post-lightbox-overlay {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0,0,0,0.85);
  /* sit above other fixed chrome (NavBar uses a very large z-index) */
  z-index: 2147483650;
  padding: 2rem;
}
.post-lightbox-overlay {
  /* custom centered X cursor (white X) */
  /* custom centered X cursor (white X) - shown when the lightbox overlay is active */
  cursor: url("data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20width%3D%2748%27%20height%3D%2748%27%20viewBox%3D%270%200%2048%2048%27%3E%3Cline%20x1%3D%2712%27%20y1%3D%2712%27%20x2%3D%2736%27%20y2%3D%2736%27%20stroke%3D%27white%27%20stroke-width%3D%274%27%20stroke-linecap%3D%27round%27%2F%3E%3Cline%20x1%3D%2736%27%20y1%3D%2712%27%20x2%3D%2712%27%20y2%3D%2736%27%20stroke%3D%27white%27%20stroke-width%3D%274%27%20stroke-linecap%3D%27round%27%2F%3E%3C%2Fsvg%3E") 24 24, pointer;

/* show a plus cursor on clickable images (indicates image will open a lightbox) */
img[role="button"] {
  cursor: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='48' height='48' viewBox='0 0 48 48'%3E%3Crect x='22' y='6' width='4' height='36' fill='white'/%3E%3Crect x='6' y='22' width='36' height='4' fill='white'/%3E%3C/svg%3E") 24 24, pointer;
}
}

/* keep the inner image area using default cursor so users can interact (e.g. drag/select)
   but the overlay (click-to-close) shows the X cursor */

.post-lightbox-inner {
  max-width: 95vw;
  max-height: 95vh;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.post-lightbox-image {
  max-width: 100%;
  max-height: 80vh;
  object-fit: contain;
  border-radius: 4px;
  box-shadow: 0 10px 40px rgba(0,0,0,0.6);
}
.post-lightbox-caption {
  margin-top: 0.8rem;
  color: #ddd;
  max-width: 80vw;
  text-align: center;
}
.post-lightbox-close {
  position: fixed;
  right: 1.25rem;
  top: 1.25rem;
  /* remove the circular chrome */
  background: transparent;
  border: none;
  color: #fff;
  /* make the X much larger (about twice previous size) */
  font-size: 5.2rem;
  /* use a light font weight for a thinner X */
  font-weight: 300;
  /* prefer Monument Grotesk (we now load thin/light/regular/medium weights) */
  font-family: var(--font-monument), system-ui, -apple-system, 'Segoe UI', Roboto, Arial, sans-serif;
  /* prefer the real font weights, don't synthesize */
  font-synthesis: none;
  padding: 0.2rem 0.4rem;
  width: auto;
  height: auto;
  border-radius: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  cursor: pointer;
  /* ensure the close button is above the NavBar */
  z-index: 2147483651;
  text-shadow: 0 2px 8px rgba(0,0,0,0.6);
}

.post-main-caption {
  /* caption constrained to the same column as the post body */
  max-width: 800px;
  margin-left: calc(50% - 400px);
  margin-right: calc(50% - 400px);
  margin-top: 0.5rem;
  padding: 0 1rem;
  color: #6b6b6b;
  font-size: 0.95rem;
  line-height: 1.25;
}

.post-body :where(p, h2, h3, ul, ol, blockquote) {
  line-height: 1.2;
  margin-bottom: 1rem;
}

@media (max-width: 800px) {
  .post-body {
    margin-left: 1rem;
    margin-right: 1rem;
    max-width: 100%;
  }
  .post-main-figure {
    margin-left: 0;
    margin-right: 0;
    max-width: 100%;
  }
  .post-main-caption {
    margin-left: 1rem;
    margin-right: 1rem;
    max-width: calc(100% - 2rem);
  }
}

/* PortableText images */
.post-body-image {
  width: 100%;
  height: auto;
  display: block;
  /* keep top spacing from preceding content but let captions control the below spacing */
  margin: 1.5rem 0 0;
  border-radius: 0;
}

/* Inline blockContent figure/caption styling */

.post-body-figure {
  /* inline block images constrained to the post column */
  max-width: 800px;
  margin-left: calc(50% - 400px);
  margin-right: calc(50% - 400px);
  margin: 1.5rem 0;
  padding: 0;
  box-sizing: border-box;
}

/* full-bleed variant for occasional breakout images in PortableText */
.post-body-figure.fullwidth {
  width: 100vw;
  max-width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  padding: 0;
}

.post-body-image.fullwidth {
  /* The parent figure (.post-body-figure.fullwidth) is positioned full-bleed
    (100vw and shifted with calc). The image itself should simply fill the
    figure's width so use width:100% and reset margins to avoid double offsets. */
  width: 100%;
  max-width: none;
  margin-left: 0;
  margin-right: 0;
  /* Keep the image's intrinsic aspect ratio and let its natural height
    determine the rendered height. This means exceptionally tall images
    will be tall on the page (not cropped via cover). */
  height: auto;
  max-height: none;
  display: block;
  object-position: center;
  border-radius: 0;
}

/* When editors choose "Full height (no crop)", show the full image instead of
   covering/cropping it. Use contain so the whole image is visible and center it
   within the viewport; constrain height so it doesn't overflow the viewport. */
.post-body-figure.fullwidth.fullheight {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: auto;
  /* Keep the figure full-bleed but provide visual gutters via padding. */
  padding: 0 10rem;
  box-sizing: border-box;
  overflow: visible;
}
.post-body-image.fullwidth.fullheight {
  /* Keep fullwidth+fullheight images full-bleed but respect their intrinsic
    height (width = 100vw; height = auto). This prevents cropping and lets
    very tall images render at their natural height while still touching
    the viewport edges. We keep the padding on the figure and use negative
    margins on the image to visually inset the subject when editors choose
    gutters. */
  width: 100vw;
  max-width: none;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  height: auto;
  max-height: none;
  display: block;
  object-fit: none;
  object-position: center top;
}

/* Wide margins inset: give 10rem gutters on both sides while keeping image centered. */
.post-body-figure.fullwidth.wide-margins {
  /* Keep the figure full-bleed but provide inner gutters via padding.
     The image will be nudged with negative margins so its visible edges
     still reach the viewport while the content area respects the gutters. */
  width: 100vw;
  max-width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  padding: 0 10rem;
  box-sizing: border-box;
  overflow: visible;
}
.post-body-image.fullwidth.wide-margins {
  /* Keep wide-margins full-bleed but maintain intrinsic height. We use
    negative margins in the editor layout to create visual gutters while
    ensuring the image still spans the viewport. */
  width: 100vw;
  max-width: none;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  height: auto;
  max-height: none;
  display: block;
  object-position: center;
}

/* When fullheight + wide margins are used together, keep contain behavior
   but still offset the image so the visible edges touch the viewport. */
.post-body-image.fullwidth.wide-margins.fullheight {
  width: 100vw;
  max-width: none;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  height: auto;
  max-height: none;
  object-fit: none;
  object-position: center top;
}

/* Keep captions under fullwidth/fullheight images and constrained to the
   post column width so they don't float beside the image. */
.post-body-figure.fullwidth.fullheight .post-body-caption {
  max-width: 800px;
  margin-left: calc(50% - 400px);
  margin-right: calc(50% - 400px);
  margin-top: 0.5rem;
  padding: 0 1rem;
  color: #6b6b6b;
  font-size: 0.95rem;
  line-height: 1.25;
  text-align: left;
}

/* When an image is wrapped in a figure (has a caption), remove its own bottom margin
   so the caption's top margin is the single, predictable gap between image and caption. */
.post-body-figure > img,
.post-main-figure > img {
  margin-bottom: 0;
}

.post-body-caption {
  /* use the same caption styling as the main caption */
  max-width: 800px;
  margin-left: calc(50% - 400px);
  margin-right: calc(50% - 400px);
  margin-top: 0.5rem;
  padding: 0 1rem;
  color: #6b6b6b;
  font-size: 0.95rem;
  line-height: 1.25;
}

/* Remove extra paragraph margins inside PortableText captions */
.post-body-caption :where(p) {
  margin: 0;
  line-height: 1.25;
}

/* Footer styles */
.site-footer {
  width: 100%;
  padding: 0;
  display: block;
  background: #0a0a0a;
  /* make all footer text display bold */
  font-weight: 700;
}

/* Hide footer by default to avoid it flashing before client JS decides visibility.
   The layout will add the `footer-visible` class to <body> when the footer
   should be shown. */
.site-footer {
  opacity: 0;
  visibility: hidden;
  transform: translateY(8px);
  transition: opacity 320ms ease, transform 320ms ease, visibility 0s linear 320ms;
}
.footer-visible .site-footer {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
  transition-delay: 0s;
}

/* Strong fallback: ensure footer is not visible unless explicitly allowed.
   This uses high specificity and !important to override other rules or inline
   styles that might cause a flash. */
body:not(.footer-visible) .site-footer {
  display: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
}
.site-footer-top {
  display: grid;
  /* two equal columns each taking 50% of the footer width */
  grid-template-columns: 50% 50%;
  /* larger horizontal gutter so there's a clear gap between columns */;
  padding: 1.25rem 2rem;
  border-top: 2px solid rgba(0,0,0,0.08); /* subtle separator */
  align-items: start;
}
.site-footer-top-left {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.site-footer-top-left .footer-contact,
.site-footer-top-left .footer-instagram {
  color: #ddd;
  text-decoration: none;
}
.site-footer-top-right {
  max-width: 900px;
  color: #bbb;
  font-size: 0.95rem;
  line-height: 1.4;
  text-align: left;
  align-self: start;
}

/* desktop positioning handled by the 50% grid columns above */
.site-footer-logo-wrap {
  width: 100%;
  display: block;
  align-items: center;
  justify-content: center;
  padding: 0;
  background: transparent;
  overflow: hidden;
}
.site-footer-logo {
  /* full-bleed across viewport */
  width: 100vw;
  max-width: none;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  height: auto;
  display: block;
  object-fit: cover;
}

.site-footer-text {
  padding: 1.25rem;
  text-align: left;
}
.site-footer-contact {
  display: flex;
  flex-direction: column; /* make email and instagram stack as two rows */
  /* match the bio's typography so vertical rhythm aligns */
  font-size: 0.95rem;
  line-height: 1.45;
  align-items: flex-start;
  margin-bottom: 0.6rem;
}
.site-footer-contact .footer-contact,
.site-footer-contact .footer-instagram {
  color: #000; /* black text by default */
  text-decoration: none;
  font-weight: 700;
}
.site-footer-desc {
  color: #111;
  max-width: 1100px;
  margin: 0 auto;
  font-size: 0.95rem;
  line-height: 1.45;
}

/* Tagline directly under the bio - match the bio's line-height and spacing */
.site-footer-tagline {
  color: inherit;
  max-width: 1100px;
  margin: 0;
  font-size: 0.95rem;
  line-height: 1.45;
  text-align: left;
}

/* In light mode, invert the white SVG to black so it remains visible on white pages */
@media (prefers-color-scheme: light) {
  .site-footer {
    background: #fff;
  }
  .site-footer-logo {
    filter: invert(0) grayscale(100%) brightness(0);
  }
  .site-footer-contact .footer-contact,
  .site-footer-contact .footer-instagram,
  .site-footer-desc {
    color: #000;
  }
}

@media (prefers-color-scheme: dark) {
  .site-footer {
    background: #0a0a0a;
  }
  .site-footer-logo {
    filter: none;
  }
  .site-footer-contact .footer-contact,
  .site-footer-contact .footer-instagram,
  .site-footer-desc {
    color: #ddd;
  }
}

@media (max-width: 760px) {
  .site-footer-top {
    grid-template-columns: 1fr;
    text-align: center;
    gap: 0.75rem;
  }
  /* keep the contact block left-aligned on mobile while the overall block is centered */
  .site-footer-contact {
    align-items: flex-start;
    text-align: left;
  }
  .site-footer-desc {
    margin-top: 0.25rem;
  }
}

/* Two-image spread: 12-column grid for offsets and spans */
.two-image-spread {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 1.5rem;
  align-items: start;
  margin: 2rem 0;
  box-sizing: border-box;
}

/* Break the spread out of the centered post column on wide screens so the
   grid and offsets align to the viewport instead of the article column. */
@media (min-width: 901px) {
  /* Desktop: half-and-half with offset — images approx 48vw each and nudged
     toward the edges so they meet near the center with a slight overlap. */
  .two-image-spread {
    width: 100vw;
    max-width: 100vw;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
    padding: 0 2rem;
    /* keep the 12-column grid so editor offsets still work via inline gridColumn */
    grid-template-columns: repeat(12, 1fr);
    gap: 1.5rem;
  }
  .two-image-spread .two-image-side {
    padding: 0 1rem;
  }

  /* left and right images take up ~half the viewport and are nudged outward */
  .two-image-spread .two-image-side.left .two-image {
    width: 48vw;
    max-width: 48vw;
    transform: translateX(-4vw);
    object-fit: cover;
    display: block;
  }
  .two-image-spread .two-image-side.right .two-image {
    width: 48vw;
    max-width: 48vw;
    transform: translateX(4vw);
    object-fit: cover;
    display: block;
    margin-left: auto;
  }
}

.two-image-spread .two-image-side {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.two-image-spread .two-image-side .two-image {
  width: 100%;
  height: auto;
  display: block;
}

.two-image-spread .two-image-caption {
  color: #6b6b6b;
  font-size: 0.95rem;
}

/* stacking behavior on mobile: make the grid a single column and let images flow */
.two-image-spread.stack-on-mobile {
  grid-template-columns: 1fr;
}

@media (max-width: 900px) {
  .two-image-spread {
    grid-template-columns: 1fr;
  }
}

/* Multi-image spread (masonry using CSS columns) */
.multi-image-spread {
  --cols: 3;
  --gutter: 16px;
  column-count: var(--cols);
  column-gap: var(--gutter);
  width: 100vw;
  max-width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  padding: var(--pad-top, 32px) 2rem var(--pad-bottom, 32px);
  box-sizing: border-box;
}
.multi-image-spread .multi-image-item {
  break-inside: avoid;
  margin-bottom: var(--gutter);
}
.multi-image-spread img {
  width: 100%;
  height: auto;
  display: block;
}
.multi-image-spread .multi-image-caption {
  color: #6b6b6b;
  font-size: 0.9rem;
  margin-top: 0.4rem;
}

@media (max-width: 900px) {
  .multi-image-spread {
    column-count: 1;
    padding-left: 0;
    padding-right: 0;
  }
  .multi-image-spread.stack-on-mobile {
    width: 100vw;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
  }
}


/* When the spread stacks on mobile make it full-bleed and offset the images
   so they appear staggered (left image shifts left, right image shifts right).
   This mirrors the reference where stacked images touch opposite edges. */
@media (max-width: 900px) {
  .two-image-spread.stack-on-mobile {
    width: 100vw;
    max-width: 100vw;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
    grid-template-columns: 1fr;
    gap: 2.5rem;
    padding: 1.5rem 0;
    box-sizing: border-box;
    /* ensure stacked spread doesn't create horizontal scroll */
    overflow: visible;
  }

  /* If the spread has a .fullwidth class ensure it breaks out of any parent
     column constraints and spans the viewport. This helps when the post-body
     container centers content; fullwidth ensures the spread touches edges. */
  .two-image-spread.fullwidth {
    width: 100vw !important;
    max-width: 100vw !important;
    margin-left: calc(50% - 50vw) !important;
    margin-right: calc(50% - 50vw) !important;
    padding-left: 0 !important;
    padding-right: 0 !important;
    box-sizing: border-box;
  }

  .two-image-spread.stack-on-mobile .two-image-side {
    width: 100vw;
    max-width: 100vw;
    display: flex;
    justify-content: center;
    box-sizing: border-box;
    padding: 0;
  }

  /* make the visible image narrower than viewport so offsetting reveals negative space */
  .two-image-spread.stack-on-mobile .two-image-side .two-image {
    width: calc(100vw - 18vw);
    max-width: calc(100vw - 18vw);
    height: auto;
    display: block;
    transition: transform 280ms ease, width 200ms ease;
  }

  /* left image shifted left, right shifted right. Tweaks can be adjusted later. */
  .two-image-spread.stack-on-mobile .two-image-side.left .two-image {
    transform: translateX(-9vw);
  }
  .two-image-spread.stack-on-mobile .two-image-side.right .two-image {
    transform: translateX(9vw);
  }

  /* captions stay constrained to the post column so they remain readable */
  .two-image-spread.stack-on-mobile .two-image-caption {
    max-width: 800px;
    margin-left: calc(50% - 400px);
    margin-right: calc(50% - 400px);
    padding: 0 1rem;
    margin-top: 0.5rem;
    color: #6b6b6b;
  }
}

